import mongoose from 'mongoose'
import validator from 'validator' //https://www.npmjs.com/package/validator

// If we use this currently no url is not acceptable...
function validateURL(value: string) {
    console.log("Ran url validator")
    return validator.isURL(value, { require_tld: false })
}

export interface Users extends mongoose.Document {
    //_id: Pretty sure _id is autogenerated...
    email:string
    firstName:string
    lastName?:string
    imageUrl?:string
    role: string
    city?:string
    province?:string
    description?:string
    website?:string
    projects?:string[]
    linkedIn?:string 
    github?:string
    reviews?:string[]
}

const UserSchema = new mongoose.Schema<Users>({
    email:{
        type: String,
        required: [true, 'Please tell us your email.'],
        maxlength: [30, 'email cannot be more than 30 characters'],
    },
    firstName: {
        type: String,
        required: [true, 'Please tell us your first name.'],
        maxlength: [30, 'Name cannot be more than 30 characters'],
      },
    lastName: {
        type: String,
        required: [false, 'Please tell us your last name.'],
        maxlength: [30, 'Name cannot be more than 30 characters'],
      },
    role: {
        type: String,
        required: [true, 'Please define the role of user!'],
        maxlength: [20, 'role cannot be more than 20 characters'],
      },
    city:{
        type: String,
        maxlength: 20 
    },
    province:{
        type: String,
        maxlength: 20 
    },
    description:{
        type: String,
        maxlength: 250 
    },
    website:{
        type: String,
        validate: {
            validator: validateURL,
            message: 'Invalid URL format',
            }
    },
    projects:{
        type: [String] // should be the project._id
    },
    linkedIn:{
        type: String,
        validate: {
            validator: validateURL,
            message: 'Invalid URL format',
            }
    },
    github:{
        type: String,
        validate: {
            validator: validateURL,
            message: 'Invalid URL format',
            }
    },
    reviews:{
        type: [String]
    },
    
})

export default mongoose.models.User || mongoose.model<Users>('User', UserSchema)