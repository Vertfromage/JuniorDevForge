import mongoose from 'mongoose'
import validator from 'validator' //https://www.npmjs.com/package/validator

function validateURL(value: string) {
    return validator.isURL(value, { require_tld: false })
}

// Most of profile is optional // note: ? means it can be null
export interface Profile {
    city?:string
    province?:string
    description?:string
    website?:string
    projects?:string[]
    socialMedia: {
        linkedIn?:string 
        github?:string
    }
    reviews?:string[]
}

export interface User extends mongoose.Document {
    //_id: Pretty sure _id is autogenerated...
    email:string
    firstName:string
    lastName?:string
    role: string
    profile: Profile
}

const UserSchema = new mongoose.Schema<User>({
    email:{
        type: String,
        required: [true, 'Please tell us your email.'],
        maxlength: [30, 'email cannot be more than 30 characters'],
    },
    firstName: {
        type: String,
        required: [true, 'Please tell us your first name.'],
        maxlength: [30, 'Name cannot be more than 30 characters'],
      },
    lastName: {
        type: String,
        required: [false, 'Please tell us your last name.'],
        maxlength: [30, 'Name cannot be more than 30 characters'],
      },
    role: {
        type: String,
        required: [true, 'Please define the role of user!'],
        maxlength: [20, 'role cannot be more than 20 characters'],
      },
    profile: {
        city:{
            type: String
        },
        province:{
            type: String
        },
        description:{
            type: String
        },
        website:{
            type: String,
            validate: {
                validator: validateURL,
                message: 'Invalid URL format',
              }
        },
        projects:{
            type: [String] // should be the project._id
        },
        socialMedia: {
            linkedIn:{
                type: String,
                validate: {
                    validator: validateURL,
                    message: 'Invalid URL format',
                  }
            },
            github:{
                type: String,
                validate: {
                    validator: validateURL,
                    message: 'Invalid URL format',
                  }
            },
        },
        reviews:{
            type: [String]
        },
    }
    
})

export default mongoose.models.User || mongoose.model<User>('User', UserSchema)